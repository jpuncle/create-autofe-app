(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{221:function(t,s,a){"use strict";a.r(s);var e=a(0),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),a("h2",{attrs:{id:"browserslist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browserslist"}},[t._v("#")]),t._v(" browserslist")]),t._v(" "),a("p",[t._v("你会发现有一个单独的 "),a("code",[t._v(".browserslistrc")]),t._v(" 文件，指定了项目的目标浏览器的范围。这个值会被 "),a("a",{attrs:{href:"https://babeljs.io/docs/en/next/babel-preset-env.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("@babel/preset-env"),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://github.com/postcss/autoprefixer",target:"_blank",rel:"noopener noreferrer"}},[t._v("Autoprefixer"),a("OutboundLink")],1),t._v(" 用来确定需要转译的 JavaScript 特性和需要添加的 CSS 浏览器前缀。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/ai/browserslist",target:"_blank",rel:"noopener noreferrer"}},[t._v("查阅"),a("OutboundLink")],1),t._v("这里了解如何指定浏览器范围。")]),t._v(" "),a("h2",{attrs:{id:"babel-编译兼容性报告"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-编译兼容性报告"}},[t._v("#")]),t._v(" Babel 编译兼容性报告")]),t._v(" "),a("p",[t._v("Babel 原意是把 ES6+ 代码编译为 ES5 代码，因此肯定用到了很多的 ES5 的 API，从 "),a("code",[t._v("@babel/helpers")]),t._v(" 就可以看到。")]),t._v(" "),a("p",[a("strong",[t._v("所以，我们的最低兼容是 IE9。")])]),t._v(" "),a("p",[t._v("但是，即使 Babel 编译后，有一些特性仍然不被 IE9 兼容，比如：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("for...of")]),t._v(" 依赖 "),a("code",[t._v("Symbol")])]),t._v(" "),a("li",[t._v("Iterable Spread 依赖 "),a("code",[t._v("Array.from")]),t._v("，例如 String Spread 和 String destructuring")]),t._v(" "),a("li",[t._v("动态 "),a("code",[t._v("import()")]),t._v(" 依赖 "),a("code",[t._v("Promise")])]),t._v(" "),a("li",[t._v("Generator 和 Async/Await 依赖 regenerator runtime，而 regenerator runtime 还依赖 "),a("code",[t._v("Promise。")])]),t._v(" "),a("li",[a("code",[t._v("Class")]),t._v(" 继承父类的静态属性以及继承原生类不被 IE10 支持")])]),t._v(" "),a("p",[t._v("详细信息请参考 "),a("a",{attrs:{href:"https://github.com/athm-fe/create-autofe-app/blob/master/doc/how-to-babel7.md#babel-%E8%BD%AC%E6%8D%A2%E5%90%8E%E4%BB%A3%E7%A0%81%E4%BE%9D%E8%B5%96%E7%9A%84-api",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel 转换后代码依赖的 API"),a("OutboundLink")],1),t._v(" 以及 "),a("a",{attrs:{href:"https://babeljs.io/docs/en/caveats",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel Caveats"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"polyfill"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#polyfill"}},[t._v("#")]),t._v(" Polyfill")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("Babel 编译 ES6+ 代码主要包括两个方面：转换语法和提供 polyfill。")])]),t._v(" "),a("p",[t._v("Creator 创建的项目默认会使用 "),a("code",[t._v("babel-preset-autofe-app")]),t._v("，它通过 "),a("code",[t._v("@babel/preset-env")]),t._v(" 和 "),a("code",[t._v("browserslist")]),t._v(" 配置来决定项目需要的语法转换和 polyfill。")]),t._v(" "),a("p",[t._v("语法转换其实就是转换为 ES5 语法以及一些 ES5 API。理想情况下，如果你只需要 ES6+ 语法，但不使用其新增的 API，就完全不用考虑 Polyfill 的问题。但是从上面的兼容性报告，我们知道有一些语法不可避免的需要一些 ES6+ 的 API，因此，就需要我们好好地研究下如何处理 polyfill 了。")]),t._v(" "),a("p",[t._v("关于 polyfill 的处理方式，涉及到一个参数："),a("code",[t._v("useBuiltIns")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"usebuiltins-false"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins-false"}},[t._v("#")]),t._v(" useBuiltIns: false")]),t._v(" "),a("p",[t._v("默认情况下，Creator 会把 "),a("code",[t._v("useBuiltIns: false")]),t._v(" 传递给 "),a("code",[t._v("@babel/preset-env")]),t._v("，这意味着关闭 polyfill 功能，你需要在自己的源码中手用引入自己需要的 polyfill。")]),t._v(" "),a("p",[a("code",[t._v("babel.config.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  presets"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'autofe-app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      useBuiltIns"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果需要的时候，自己手动引入 polyfill。")]),t._v(" "),a("p",[a("code",[t._v("index.entry.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'core-js/features/promise'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 32")]),t._v("\n")])])]),a("p",[t._v("关闭 polyfill 的好处是打包文件最小化，坏处是需要手动处理 polyfill 问题，既耗费精力又容易出错。")]),t._v(" "),a("p",[t._v("为了使用方便，我们为你准备了一个精简版的 polyfill 库 "),a("a",{attrs:{href:"https://www.npmjs.com/package/autofe-polyfill",target:"_blank",rel:"noopener noreferrer"}},[t._v("autofe-polyfill"),a("OutboundLink")],1),t._v("，提供了你可能会经常使用的 polyfill。")]),t._v(" "),a("p",[a("code",[t._v("index.entry.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'autofe-polyfill'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 32")]),t._v("\n\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" foo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("如果你不想那么麻烦，可以直接引用一个更全面的库。")]),t._v(" "),a("p",[a("code",[t._v("index.entry.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"core-js/stable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regenerator-runtime/runtime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[a("code",[t._v("@babel/polyfill")]),t._v(" 官方已经不推荐使用了，建议直接使用 "),a("code",[t._v("core-js")]),t._v(" 和 "),a("code",[t._v("regenerator-runtime")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"core-js/stable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regenerator-runtime/runtime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("h3",{attrs:{id:"usebuiltins-usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins-usage"}},[t._v("#")]),t._v(" useBuiltIns: 'usage'")]),t._v(" "),a("p",[t._v("如果想要开启自动 polyfill，你可以通过 "),a("code",[t._v("babel.config.js")]),t._v("，设置 "),a("code",[t._v("useBuiltIns: 'usage'")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("babel.config.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  presets"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'autofe-app'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      useBuiltIns"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'usage'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这样它会根据源代码中出现的语言特性自动检测需要的 polyfill。这确保了最终包里 polyfill 数量的最小化。")]),t._v(" "),a("h3",{attrs:{id:"usebuiltins-entry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usebuiltins-entry"}},[t._v("#")]),t._v(" useBuiltIns: 'entry'")]),t._v(" "),a("p",[t._v("另外，你还可以配置 "),a("code",[t._v("useBuiltIns: 'entry'")]),t._v("，然后手动在入口文件头部添加 "),a("code",[t._v('import "core-js/stable";')]),t._v("。\n这会根据 "),a("code",[t._v("browserslist")]),t._v(" 目标导入所有需要的 polyfill，这样你就不用再担心 polyfill 问题了。\n但是因为是根据 "),a("code",[t._v("browserslist")]),t._v(" 而不是实际代码进行解析，所以可能包含了一些没有用到的 polyfill，从而导致最终的包大小增加。")]),t._v(" "),a("p",[t._v("更多细节可查阅 "),a("a",{attrs:{href:"https://new.babeljs.io/docs/en/next/babel-preset-env.html#usebuiltins-usage",target:"_blank",rel:"noopener noreferrer"}},[t._v("@babel-preset/env 文档"),a("OutboundLink")],1),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"依赖包-es6-处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#依赖包-es6-处理"}},[t._v("#")]),t._v(" 依赖包 ES6+ 处理")]),t._v(" "),a("p",[t._v("为了提升打包速度，默认情况下 "),a("code",[t._v("babel-loader")]),t._v(" 会忽略所有 "),a("code",[t._v("node_modules")]),t._v(" 中的文件。如果想要通过 Babel 显式转译一个依赖包，可以将其添加到 "),a("code",[t._v("creator.config.js")]),t._v(" 中的 "),a("RouterLink",{attrs:{to:"/config/#transpiledependencies"}},[a("code",[t._v("transpileDependencies")])]),t._v(" 选项。这会为该依赖开启语法转换。如果你配置了 "),a("code",[t._v("useBuiltIns: 'usage'")]),t._v(" 的话，"),a("code",[t._v("@babel/preset-env")]),t._v(" 还会分析该依赖的代码，并自动检测出需要的 polyfills。更多用法请参考 "),a("a",{attrs:{href:"#polyfill"}},[t._v("polyfill")]),t._v(" 部分。")],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// creator.config.js")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n  transpileDependencies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@auto/img-crop'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("然而，大多数情况下，依赖包都提供了 ES5 代码，而且会声明需要的 polyfill。你可以在你的入口文件中直接引用对应的 polyfill。")]),t._v(" "),a("p",[a("code",[t._v("index.entry.js")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'core-js/features/promise'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nPromise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 32")]),t._v("\n")])])]),a("p",[t._v("特殊情况下，某个依赖提供了 ES5 代码，但使用了 ES6+ 特性且没有明确列出需要的 polyfill，可以直接引用一个完备的 polyfill 库，简单粗暴。（如果配合 "),a("code",[t._v("useBuiltIns: 'entry'")]),t._v(" 使用的话，）")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"core-js/stable"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"regenerator-runtime/runtime"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("当使用 "),a("code",[t._v("core-js/stable")]),t._v(" 和 "),a("code",[t._v("regenerator-runtime/runtime")]),t._v(" 的时候，最好配合 "),a("code",[t._v("useBuiltIns: 'entry'")]),t._v(" 使用，这样会根据 "),a("code",[t._v("browserslist")]),t._v(" 目标导入所有需要的 polyfill，也许可以减少一点打包体积。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);